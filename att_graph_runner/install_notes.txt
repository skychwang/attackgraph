Setup notes for OpenAI:
-- notes:
        has worked on srg.eecs.umich.edu and others:
            TensorFlow version 1.4.1 (or 1.5.0 or 1.7.0)
                python3 -c 'import tensorflow as tf; print(tf.__version__)'
                -- to install: pip3 install tensorflow
                    or:
                    pip3 install tensorflow==1.5
                or:
                TensorFlow 1.7.0
                or:
                TensorFlow 1.5.0
            Python3 version 3.5.2
                python3 -V
            Java version 1.8.0_162, build 1.8.0_162-8u162-b12-0ubuntu0.16.04.2-b12
                or:
                Java version 1.8.0_171, build 1.8.0_171-8u171-b11-0ubuntu0.16.04.1-b11
                java -version
            Ubuntu 16.04.4 LTS, xenial
                lsb_release -a
                or:
                Ubuntu 16.04.5 LTS, xenial
            Intel(R) Xeon(R) CPU E5-1620 v2 @ 3.70GHz
                cat /proc/cpuinfo | head -20
            CPUs: 8
                nproc --all
            RAM: 32 GB
                cat /proc/meminfo | head -5

-- need to install for Python3:
        -- OpenAI Gym
                https://gym.openai.com/docs/
                mkdir gym
                cd gym
                # git clone https://github.com/openai/gym
                git clone https://github.com/masonwright14/gym.git
                cd gym
                pip3 install -e .[all]
                -- note: this may fail if swig is not installed yet.
                        sudo apt-get install swig
                        . . . works on Linux.
                        http://www.swig.org/download.html
        -- OpenAI Baselines
                https://github.com/openai/baselines
                mkdir baselines
                cd baselines
                # git clone https://github.com/openai/baselines.git
                git clone https://github.com/masonwright14/baselines.git
                cd baselines
                pip3 install -e .
        -- Py4J
                pip3 install py4j
        -- cloudpickle
                pip3 install cloudpickle
    -- need to install:
        -- Gambit
                gambit-15.1.1
                    https://sourceforge.net/projects/gambit/files/gambit15/15.1.1
                    see: https://github.com/gambitproject/gambit/blob/master/INSTALL
                # https://sourceforge.net/projects/gambit/files/gambit15/15.1.1
                # download gambit-15.1.1.tar.gz, open it, and copy to target computer at ~/
                cd gambit-15.1.1
                ./configure
                # note: make may require gcc-6 and g++-6, not newer versions, to compile
                # gambit. (gcc-5 and g++-5 also seem to work, but not 7.)
                # gcc -v # should return version 6. same for g++ -v
                make
                sudo make install
        -- GameAnalysis
                # https://github.com/egtaonline/gameanalysis
                pip3 install gameanalysis --user
                # must be installed under Python3, not Python2.
                -- may need to add to path to call ga:
                        .bash_profile:
                                export PATH="/home/masondw/.local/bin:$PATH"
-- check installations:
        -- TensorFlow check:
                python3
                import tensorflow
                # may need to downgrade to version 1.5 (see above for pip3 instructions)
        -- OpenAI Gym check:
                python3
                import gym
                env = gym.make('Hex9x9-v0')
                # note: this may fail if baselines is not installed yet, or if you have
                # a duplicate copy of gym in ~/.local/lib/python3.5/site-packages/.
                # in that case, do:
                # cd .local/lib/python3.5/site-packages/ # or python3.6
                # mv gym gymtemp
                env.reset()
                env.render()
        -- OpenAI baselines check:
                cd ~/baselines/baselines/baselines/deepq/experiments
                python3 train_cartpole.py
        -- Gambit check:
            gambit-lcp -h
        -- GameAnalysis check:
            ga -h
