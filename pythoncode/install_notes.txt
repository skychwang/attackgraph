Setup notes for OpenAI:
-- notes:
        has worked on srg.eecs.umich.edu:
            TensorFlow version 1.4.1
                python3 -c 'import tensorflow as tf; print(tf.__version__)'
                -- to install: pip3 install tensorflow
            Python3 version 3.5.2
                python3 -V
            Java version 1.8.0_162, build 1.8.0_162-8u162-b12-0ubuntu0.16.04.2-b12
                java -version
            Ubuntu 16.04.4 LTS, xenial
                lsb_release -a
            Intel(R) Xeon(R) CPU E5-1620 v2 @ 3.70GHz
                cat /proc/cpuinfo | head -20
            CPUs: 8
                nproc --all
            RAM: 32 GB
                cat /proc/meminfo | head -5

-- need to install for Python3:
        -- OpenAI Gym
                https://gym.openai.com/docs/
                mkdir gym
                cd gym
                # git clone https://github.com/openai/gym
                git clone https://github.com/masonwright14/gym.git
                cd gym
                pip3 install -e .[all]
                -- note: this may fail if swig is not installed yet.
                        sudo apt-get install swig
                        . . . works on Linux.
                        http://www.swig.org/download.html
        -- OpenAI Baselines
                https://github.com/openai/baselines
                mkdir baselines
                cd baselines
                # git clone https://github.com/openai/baselines.git
                git clone https://github.com/masonwright14/baselines.git
                cd baselines
                pip3 install -e .
        -- Py4J
                pip3 install py4j
-- check installations:
        -- OpenAI Gym check:
                python3
                import gym
                env = gym.make('Hex9x9-v0')
                env.reset()
                env.render()
        -- OpenAI baselines check:
                cd ~/baselines/baselines/baselines/deepq/experiments
                python3 train_cartpole.py
                -- note: this may fail if TensorFlow is not installed.
                        pip3 install tensorflow
                -- note: this may fail if CloudPickle is not installed.
                        pip3 install cloudpickle
                        https://pypi.python.org/pypi/cloudpickle/0.2.1
                python3 enjoy_cartpole.py
                -- note: this will fail if there is no display on the server,
                        with error like pyglet.canvas.xlib.NoSuchDisplayException
-- need to modify certain scripts:
        gym/gym/envs/__init__.py
        gym/gym/envs/board_game/__init__.py
        gym/gym/envs/board_game/depgraph_java.py
        gym/gym/envs/board_game/depgraph_java_att.py
        gym/gym/envs/board_game/dg_java_both.py
        gym/gym/envs/board_game/dg_java_vs_mixed_att.py
        gym/gym/envs/board_game/dg_java_vs_mixed_def.py
        baselines/baselines/deepq/__init__.py
        baselines/baselines/deepq/build_graph.py
        baselines/baselines/deepq/simple_conservative.py
-- call your gym code to test:
        python3
        import gym
        env = gym.make('Connect4MaxConvAug-v0')
        env.reset()
        env.render()
        env.step(3)
        env.render()
-- call your baselines code to test:
        cd ~/baselines/baselines/baselines/deepq/experiments
        python3 train_c4_minimax_conv.py
-- scripts to use for train and test:
        pythoncode/enjoy_depgraph_data.py
        pythoncode/enjoy_depgraphAtt_data.py
        pythoncode/enjoy_depgraph_data_vs_mixed.py
        pythoncode/enjoy_dg_data_vs_mixed_def.py
        pythoncode/enjoy_dg_two_sided.py
        pythoncode/train_depgraph_java_mlp.py
        pythoncode/train_depgraph_java_mlp_att.py
        pythoncode/train_dg_java_mlp_def_vs_mixed.py
        pythoncode/train_dg_java_mlp_att_vs_mixed.py
-- scripts to use for generating new columns:
        pythoncode/gen_att_payoffs.py
        pythoncode/gen_def_payoffs.py
        pythoncode/generate_new_cols.py
        pythoncode/cli_enjoy_dg_no_net.py
        pythoncode/cli_enjoy_dg_def_net.py
        pythoncode/cli_enjoy_dg_att_net.py
        pythoncode/cli_enjoy_dg_two_sided.py
        add_new_data.py
-- Java JAR files to have:
        depgraphpy4jdefvseither/depgraphpy4jdefvsnetorheuristic.jar
        depgraphpy4jattvseither/depgraphpy4jattvsnetorheuristic.jar
        depgraphpy4jboth/depgraphpy4jconfigboth.jar
        pythoncode/dg4jdefcli/dg4jdefcli.jar
        pythoncode/dg4jattcli/dg4jattcli.jar
        pythoncode/dg4jnonetcli/dg4jnonetcli.jar
-- each JAR file's folder needs to have:
        graphs/RandomGraph30N100E6T1_B.json
-- other library to have:
        ga
        # from GameAnalysis library developed by Erik and Bryce
        -- if not present, use:
            pip install gameanalysis
